#*****************************************************************
#* Catalog Utilities - parameters/settings 
#*****************************************************************
# common settings
#***************************************************************** 
rest_service=http://[catalogserver]:9085/access/2
user=
# password can be empty - user will be prompted to input
password=

#*****************************************************************
# ColumnLineageSummary settings 
#*****************************************************************
lineageSummary.outfolder=./out
#lineageSummary.outfolder=C:\data\edc_utils
lineageSummary.filePrefix=EDC
# query for the lineage summary to select objects to process
# filters for resource names could be added as needed
#    e.g and core.resourceName:<resource_name> 
#lineageSummary.query = core.allclassTypes:( \
#				        com.infa.ldm.relational.Column OR \
#						com.infa.ldm.relational.ViewColumn OR \
#						com.infa.ldm.file.delimited.DelimitedField OR \
#						com.infa.ldm.file.xml.XMLFileField OR \
#						com.infa.ldm.file.json.JSONField \
#						com.infa.ldm.adapter.Field \
#  com.infa.ldm.tableau.Field \
#  ) \
#  AND core.resourceName:(datalake OR acme_crm OR restaurants)
#				 		AND core.resourceType:("Tableau Server") 
#				 		AND core.resourceName:("datalake ") 
#				 		AND core.resourceType:("Tableau Server") 
# core.allclassTypes:
lineageSummary.query = core.allclassTypes:core.DataElement \
  AND core.resourceName:(datalake OR acme_crm OR restaurants)

# or for all dataelements in all resources
#lineageSummary.query = core.allclassTypes:core.DataElement


#*****************************************************************

#*****************************************************************
# BG Fuzzy linker settings 
#*****************************************************************
#fuzzyLink.bgResourceName=BG_DEFAULT_RESOURCE
fuzzyLink.bgResourceName=Axon
# the query to get a list of catalog objects to find matching terms
fuzzyLink.catalogQuery=core.resourceName:sqlServer_testDB \
                       and core.allclassTypes:com.infa.ldm.relational.Column
# class type of the Term (axon or bg)
fuzzyLink.termType=com.infa.ldm.axon.AxonGlossary
#fuzzyLink.termType=core.classType:com.infa.ldm.axon.AxonGlossary  BG term too
#fuzzyLink.logfile=C:\\data\\edc_utils\\bgFuzzyLink_result.csv
fuzzyLink.logfile=fuzzyLink_result.csv
fuzzyLink.linkResults=fuzzylinkedTerms.csv
fuzzyLink.searchThreshold=96
# set testOnly to false - to write links (true just prints what would be linked)
fuzzyLink.testOnly=true
# replace characters (if needed) comma seperated list (replace with spaces)
fuzzyLink.replaceWithSpace=
#fuzzyLink.replaceWithSpace=_,-


#*****************************************************************
# Model Linker
#*****************************************************************
# powerdesigner model settings
#*****************************************************************
#modelLinker.entityQuery=core.classType:com.infa.ldm.extended.sappowerdesigner.Table
#myodelLinker.entityToAttrLink=com.infa.ldm.extended.sappowerdesigner.TableColumn
#modelLinker.physicalNameAttr=com.infa.ldm.extended.sappowerdesigner.PhysicalName

#*****************************************************************
# All model settings (Powerdesigner or Erwin) +others if needed
# edit resource name filter if required, or remove for all resources
#*****************************************************************
modelLinker.entityQuery=core.classType:(com.infa.ldm.erwin.TableEntity \
                           or com.infa.ldm.erwin.Entity \
                           or com.infa.ldm.erwin.Table \
                           or com.infa.ldm.extended.sappowerdesigner.Entity \
                           or com.infa.ldm.extended.sappowerdesigner.Table) \
    AND  core.resourceName:acme_erwin
    
#  pwrdes_pdm_test
#  acme_erwin
#  sh_erwin
modelLinker.entityToAttrLink=com.infa.ldm.erwin.TableEntityColumnAttribute,com.infa.ldm.extended.sappowerdesigner.TableColumn,com.infa.ldm.erwin.TableEntityPrimaryKeyColumnAttribute,com.infa.ldm.erwin.TablePrimaryKeyColumnAttribute,com.infa.ldm.extended.sappowerdesigner.TablePrimaryKey
modelLinker.physicalNameAttr=com.infa.ldm.erwin.PhysicalName,com.infa.ldm.extended.sappowerdesigner.PhysicalName
#
# note: to restrict to a specific resource/model
# add 
#     AND core.resourceName:<resourceName>
# or for multiple
#     AND core.resourceName:(<resourceName1> OR <resourceNameN>)
#*****************************************************************

#*****************************************************************
# dbms settings
#*****************************************************************
# the physical name will be appended to this query - you can also filter by resource name/type if you want here
modelLinker.tableQuery=core.classType:com.infa.ldm.relational.Table
modelLinker.tableToColLink=com.infa.ldm.relational.TableColumn
# find table by schema settings
modelLinker.useOwnerSchema=true
modelLinker.ownerSchemaAttr=com.infa.ldm.erwin.OwnerSchema
#*****************************************************************
# ModelLinker - other settings
#*****************************************************************
# set to true to reverse the process
#   it will delete links between model and db (useful for testing and re-linking)
modelLinker.deleteLinks=false
modelLinker.testOnly=true
modelLinker.logfile=modelLinker.log
modelLinker.lineageFile=model_lineage.csv
#*****************************************************************
# end Model Linker settings
#*****************************************************************
